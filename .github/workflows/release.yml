name: release
on:
  push:
    branches:
      - TEST-RELEASE

jobs:
  build_release:
    name: build_release
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Check Output Parameters
          run: |
            echo "Got tag name ${{ steps.release.outputs.tag_name }}"
            echo "Got release version ${{ steps.release.outputs.version }}"
      - name: create-release
        uses: rymndhng/release-on-push-action@master
        with:
          bump_version_scheme: minor
          use_github_release_notes: true
          tag_prefix: v
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: build
        run: |
          composer install --no-dev --optimize-autoloader --classmap-authoritative
          composer dump-autoload --no-dev --optimize --classmap-authoritative
          rm -rf .git
          rm -rf .github
          rm -rf tests
          rm -rf vendor.zip
          mkdir dpdbaltics
          rsync -Rr ./ ./dpdbaltics
          shopt -s extglob
          rm -r !(dpdbaltics)
          find . -maxdepth 1 -type f -exec rm "{}" \;
          cd dpdbaltics && rm -rf dpdbaltics
          cd ../ && zip -r dpdbaltics.zip dpdbaltics/
      - name: release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: ${{ steps.version.outputs.version }}
          tag_name: ${{ github.ref }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Upload dpdbaltics
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dpdbaltics.zip
          asset_name: dpdbaltics.zip
          asset_content_type: application/zip
