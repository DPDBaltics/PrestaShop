name: release

on:
  push:
    tags:
      - '*'

jobs:
  build_release:
    name: build_release
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: build
        run: |
          composer install --no-dev --optimize-autoloader --classmap-authoritative
          composer dump-autoload --no-dev --optimize --classmap-authoritative
          npm install --quiet --no-progress
          npm run build
          rm -rf node_modules
          find views/js/ -name "*.css" -type f -delete
          cp .github/.htaccess vendor/.htaccess
          rm -rf .git
          rm -rf .github
          rm -rf tests
          rm -rf .docker
          rm docker-compose.yml
          rm docker-compose.local.yml
          rm Makefile
          rm .php_cs.cache
          vendor/bin/autoindex
          mkdir dpdbaltics
          rsync -Rr ./ ./dpdbaltics
          shopt -s extglob
          rm -r !(dpdbaltics)
          find . -maxdepth 1 -type f -exec rm "{}" \;
          cd dpdbaltics && rm -rf dpdbaltics
      - name: version
        run: echo "::set-output name=version::$(./bin/azblogfilter --version)"
        id: version
      - name: release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: ${{ steps.version.outputs.version }}
          tag_name: ${{ github.ref }}
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Upload dpdbaltics
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/dpdbaltics.zip
          asset_name: dpdbaltics.zip
          asset_content_type: application/zip
